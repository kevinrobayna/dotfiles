#################################### OPTIONS ###################################
tmux_dir="~/.config/tmux"
tmux_conf_dir="$tmux_dir/conf"
tmux_plugins_dir="$tmux_dir/plugins"

################################## OPTS ##################################
# utf8 is on
setw -q -g utf8 on

# Fix colors and enable true color support and italics
set -g default-terminal "tmux-256color"
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

set -g base-index 1           # start indexing windows at 1 instead of 0
setw -g pane-base-index 1     # start indexing windows at 1 instead of 0
set -g detach-on-destroy off  # don't exit from tmux when closing a session
set -g escape-time 0          # zero-out escape time delay
set -g history-limit 1000000  # significantly increase history size
set -g mouse on               # enable mouse support
set -g renumber-windows on    # renumber all windows when any window is closed
set -g set-clipboard on       # use system clipboard
set -g status-interval 2      # update status every 2 seconds
set -g status-left-length 200 # increase status line length
set -g status-position top    # macOS / darwin style
set -g status-right ''        # empty
setw -g automatic-rename on   # Automatically rename windows based on the application within
set -g set-titles on          # Use titles in tabs
set-option -g focus-events on
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt (cmd+w)
set -g detach-on-destroy off  # don't exit from tmux when closing a session

# Sticky time after repeated commands
set -sg repeat-time 500

set-window-option -g mode-keys vi

################################# KEY BINDINGS #################################
# Note: that the -n means we can ignore the ctrl-a prefix

# Set Ctrl-b as the default prefix
set-option -g prefix C-b

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Reload the tmux file
bind r source-file "$tmux_dir/tmux.conf"

# Windows
bind w kill-window
bind -n S-Left  previous-window
bind -n S-Right next-window

# Move Windows
bind -n C-S-Left swap-window -t -1\; select-window -t -1
bind -n C-S-Right swap-window -t +1\; select-window -t +1

# Split panes
bind - split-window -v               # Horizontal
bind | split-window -h               # Vertical
bind k kill-pane -a                  # Kill all panes except for the current one

# tmux-sessionizer
bind -n C-w popup -h 70% -w 85% -E "~/dev/dotfiles/bin/tmux-sessionizer"

bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5

bind -r m resize-pane -Z

bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
bind-key -T copy-mode-vi 'y' send -X copy-selection # copy text with "y"

unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode when dragging with mouse
# Apps
bind g new-window -n '' lazygit
bind d new-window -n '' lazydocker
bind p new-window -n '' btop

###################################### VIM #####################################

# Tmux doesn't pass <S-CR> codes to Neovim
# https://stackoverflow.com/questions/16359878/how-to-map-shift-enter
bind -n S-Enter send-keys Escape "[13;2u"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?\.?(view|l?n?vim?x?|fzf)(diff)?(-wrapped)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

################################## THEME ##################################

color_bg="#2e323b"
color_fg="#282c34"
color_green="#98c379"
color_yellow="#e5c07b"
color_red="#e06c75"
color_blue="#61afef"
color_cyan="#56b6c2"
color_purple="#c678dd"
color_gray="#5c6370"
color_buffer="#939aa3"
color_selection="#3e4452"

#################################### PLUGINS ###################################

set -g status on
set -g status-interval 2      # update status every 2 seconds
set -g status-justify centre
set -g status-position top    # macOS / darwin style
set -g status-left-length 90
set -g status-right-length 90
set -g status-style "bg=$color_fg"

set -g status-style 'bg=default' # transparent
set -g pane-active-border fg=$color_gray
set -g pane-border-style fg=$color_gray

set -g message-style bg=$color_blue,fg=default
setw -g window-status-separator "   "
set-window-option -g mode-style bg=$color_purple,fg=default

#################################### FORMAT ####################################

set -g status-left "#(gitmux -cfg $HOME/.config/tmux/conf/gitmux.conf)"
set -g status-right "#[fg=$color_purple]%R"
setw -g window-status-format "#[fg=$color_gray,italics]#I: #[noitalics]#W"
setw -g window-status-current-format "#[fg=$color_purple,italics]#S: #[fg=$color_buffer,noitalics,bold]#W"

#################################### PLUGINS ###################################
set-environment -g TMUX_PLUGIN_MANAGER_PATH "$tmux_plugins_dir"

set -g @plugin 'tmux-plugins/tpm'                   # Plugin Manager
set -g @plugin 'tmux-plugins/tmux-yank'             # Copy to system clipboard
set -g @plugin 'tmux-plugins/tmux-sensible'         # Sensible defaults
set -g @plugin 'tmux-plugins/tmux-resurrect'        # Restore tmux sessions
set -g @plugin 'christoomey/vim-tmux-navigator'     # <ctrl>+hjkl
set -g @plugin 'joshmedeski/tmux-fzf-url'           # fzd urls in terminal
set -g @plugin 'joshmedeski/tmux-nerd-font-window-name' # Make app names in tmux line icons
# NOTE: MUST BE LAST
set -g @plugin 'tmux-plugins/tmux-continuum'        # Continuous saving of tmux environment

## Plugin options
set -g @resurrect-dir "$tmux_dir/resurrect"
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save 'S'                          # Save the session
set -g @resurrect-restore 'R'                       # Reload the session
set -g @continuum-restore 'on'                      # Last saved session is always restored
set -g @resurrect-strategy-nvim 'session'           # Restore Neovim session if a Session.vim file is present

set -g @yank_with_mouse on                          # Just select with the mouse to copy

set -g @fzf_find_binding  'find ~/work ~/dev -mindepth 0 -maxdepth 1 -type d'
set -g @fzf-url-fzf-options '-p 60%,30% --prompt="   " --border-label=" Open URL "'
set -g @tmux-nerd-font-window-name-show-name false
set -g @t-fzf-prompt '  '
set -g @fzf-url-history-limit '2000'

set -g @vim_navigator_mapping_left "C-Left C-h"  # use C-h and C-Left
set -g @vim_navigator_mapping_right "C-Right C-l"
set -g @vim_navigator_mapping_up "C-k"
set -g @vim_navigator_mapping_down "C-j"
set -g @vim_navigator_mapping_prev ""  # removes the C-\ binding

# Run the plugins
run "$tmux_plugins_dir/tpm/tpm"
